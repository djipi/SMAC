#ifdef DEF_MR
/*
 *  Keyword definitions
 */
#define	MR_ABS	3022
#define	MR_ADD	3000
#define	MR_ADDC	3001
#define	MR_ADDQ	3002
#define	MR_ADDQMOD	3058
#define	MR_ADDQT	3003
#define	MR_AND	3009
#define	MR_BCLR	3015
#define	MR_BSET	3014
#define	MR_BTST	3013
#define	MR_CMP	3031
#define	MR_CMPQ	3032
#define	MR_DIV	3021
#define	MR_IMACN	3020
#define	MR_IMULT	3017
#define	MR_IMULTN	3018
#define	MR_JR	3050
#define	MR_JUMP	3049
#define	MR_LOAD	3060
#define	MR_LOADB	3041
#define	MR_LOADP	3043
#define	MR_LOADW	3042
#define	MR_MIRROR	3048
#define	MR_MMULT	3051
#define	MR_MOVE	3059
#define	MR_MOVEFA	3039
#define	MR_MOVEI	3040
#define	MR_MOVEQ	3037
#define	MR_MOVETA	3038
#define	MR_MTOI	3052
#define	MR_MULT	3016
#define	MR_NEG	3008
#define	MR_NOP	3054
#define	MR_NORMI	3053
#define	MR_NOT	3012
#define	MR_OR	3010
#define	MR_PACK	3057
#define	MR_RESMAC	3019
#define	MR_ROLQ	3030
#define	MR_ROR	3028
#define	MR_RORQ	3029
#define	MR_SAT16	3035
#define	MR_SAT16S	3036
#define	MR_SAT24	3055
#define	MR_SAT32S	3044
#define	MR_SAT8	3033
#define	MR_SH	3023
#define	MR_SHA	3026
#define	MR_SHARQ	3027
#define	MR_SHLQ	3024
#define	MR_SHRQ	3025
#define	MR_STORE	3061
#define	MR_STOREB	3045
#define	MR_STOREP	3047
#define	MR_STOREW	3046
#define	MR_SUB	3004
#define	MR_SUBC	3005
#define	MR_SUBQ	3006
#define	MR_SUBQMOD	3034
#define	MR_SUBQT	3007
#define	MR_UNPACK	3056
#define	MR_XOR	3011
#endif

#ifdef DECL_MR
/*
 *  keyword state-machine tables
 *
 */

int mrbase[98] = {
 0, 3, 3, 7, 2, 12, 8, 12,
 19, 26, 12, 7, 28, 34, 22, 22,
 19, 40, 41, 34, 42, 29, 33, 28,
 50, 39, 52, 38, 36, 36, 44, 48,
 54, 46, 60, 46, 55, 48, 68, 55,
 70, 58, 57, 73, 59, 58, 59, 64,
 79, 71, 68, 81, 69, 76, 84, 82,
 72, 80, 83, 82, 79, 80, 0, 80,
 82, 83, 83, 99, 102, 91, 91, 86,
 105, 93, 89, 106, 101, 112, 0, 0,
 3, 97, 112, 105, 116, 105, 108, 106,
 126, 128, 127, 112, 113, 131, 119, 124,
 132, 133
};

int mrtab[261] = {
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, 78, 79, 80, -2, 92, 91, -1,
 -2, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, 1, 2, 3, 4, 16, 19, 17,
 34, 5, 6, 23, 7, 8, 9, 10,
 11, 18, 12, 13, 22, 14, 20, 21,
 15, 24, -2, 26, 27, 25, -2, 32,
 28, 35, 29, 37, 41, 42, -2, 30,
 31, 33, 38, 36, 43, -2, 44, 45,
 46, 47, -2, 48, 50, 51, 39, 40,
 52, 53, 54, 55, 56, -2, -2, 58,
 57, 59, -2, 60, 62, 63, 66, 49,
 67, 61, 68, -2, -2, -2, -2, -2,
 64, -2, 70, 71, -2, 72, 65, 73,
 74, 75, 69, -2, -2, 76, -2, 77,
 -2, -2, 81, -2, -2, 82, -2, 84,
 85, -2, 86, -2, 87, -2, -2, -2,
 88, 90, -2, -2, 83, 93, 94, 95,
 96, -2, -2, -2, -2, -2, 89, -2,
 -2, -2, -2, -2, -2, -2, 97, -2,
 -2, -2, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -2, -1, -1, -1, -1,
 -1, -1, -2, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1
};

int mrcheck[261] = {
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, 62, 62, 62, 79, 80, 78, -1,
 62, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, 0, 0, 0, 0, 1, 2, 1,
 11, 0, 0, 4, 0, 0, 0, 0,
 0, 1, 0, 0, 3, 0, 2, 2,
 0, 5, 6, 7, 8, 6, 10, 9,
 8, 12, 8, 13, 14, 15, 16, 8,
 8, 9, 13, 12, 17, 18, 19, 20,
 21, 22, 23, 24, 25, 26, 13, 13,
 27, 28, 29, 30, 31, 32, 33, 34,
 33, 35, 33, 36, 37, 38, 39, 24,
 40, 36, 41, 42, 43, 44, 45, 46,
 38, 47, 48, 49, 50, 51, 38, 52,
 53, 54, 43, 55, 56, 57, 58, 59,
 60, 61, 63, 64, 65, 66, 67, 68,
 69, 70, 71, 72, 73, 74, 76, 69,
 75, 77, 81, 75, 67, 82, 83, 84,
 85, 72, 86, 75, 87, 83, 75, 88,
 72, 89, 90, 91, 92, 93, 94, 95,
 96, 97, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, 93, -1, -1, -1, -1,
 -1, -1, 93, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1
};

int mraccept[261] = {
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, 3055, -1, 3035, -1,
 3033, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, 3050, -1, -1, -1, 3010, -1,
 -1, -1, -1, -1, -1, -1, 3022, -1,
 -1, -1, 3023, -1, 3000, 3009, -1, -1,
 -1, 3031, 3021, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 3008, 3054, -1,
 -1, -1, 3012, -1, -1, 3026, -1, -1,
 3004, 3028, -1, 3011, 3001, 3015, 3014, 3013,
 -1, 3032, -1, -1, 3049, 3060, -1, -1,
 -1, 3059, 3002, 3052, 3016, -1, 3057, -1,
 3030, 3029, -1, 3024, 3025, -1, 3005, -1,
 -1, 3020, 3017, 3041, -1, 3051, 3053, 3003,
 -1, -1, 3027, 3040, 3006, 3061, -1, -1,
 -1, 3043, 3018, 3037, 3048, 3007, -1, 3039,
 3042, 3038, 3019, 3036, 3044, 3045, -1, 3056,
 3058, 3034, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, 3047, -1, -1, -1, -1,
 -1, -1, 3046, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1
};
#endif
